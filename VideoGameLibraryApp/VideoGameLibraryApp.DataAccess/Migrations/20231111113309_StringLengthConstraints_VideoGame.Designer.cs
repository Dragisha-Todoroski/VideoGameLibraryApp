// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VideoGameLibraryApp.DataAccess;

#nullable disable

namespace VideoGameLibraryApp.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231111113309_StringLengthConstraints_VideoGame")]
    partial class StringLengthConstraints_VideoGame
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VideoGameLibraryApp.Domain.Entities.VideoGame", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsCoop")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMultiplayer")
                        .HasColumnType("bit");

                    b.Property<string>("Publisher")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("VideoGames");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2eabc775-0201-4c48-8200-6c3aba9c6d4b"),
                            Genre = "Survival",
                            IsCoop = false,
                            IsMultiplayer = true,
                            Publisher = "Mojang",
                            ReleaseDate = new DateTime(2011, 4, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Minecraft"
                        },
                        new
                        {
                            Id = new Guid("63e26d44-502d-4ca4-a47c-4538e10f5bd3"),
                            Genre = "Platformer",
                            IsCoop = true,
                            IsMultiplayer = false,
                            ReleaseDate = new DateTime(2027, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "It Takes Two"
                        },
                        new
                        {
                            Id = new Guid("a4d51e63-bbeb-42a7-abb9-b127932d13f7"),
                            Genre = "Shooter",
                            IsCoop = true,
                            IsMultiplayer = true,
                            ReleaseDate = new DateTime(2001, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Halo"
                        });
                });

            modelBuilder.Entity("VideoGameLibraryApp.Domain.Entities.VideoGamePlatform", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("VideoGamePlatforms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("85f22a92-e6e7-420a-a341-046a847089fe"),
                            Name = "PC"
                        },
                        new
                        {
                            Id = new Guid("61b1424a-df05-4876-956d-b2b004f0c59a"),
                            Name = "Nintendo Switch"
                        },
                        new
                        {
                            Id = new Guid("6346523c-c372-4ea1-833f-fe8e345faf2f"),
                            Name = "Nintendo 64"
                        },
                        new
                        {
                            Id = new Guid("3877daeb-e889-4889-9b02-cc0f696bc6ea"),
                            Name = "Xbox 360"
                        },
                        new
                        {
                            Id = new Guid("0e55f0c8-2ad4-4238-af3d-019cf5f42f70"),
                            Name = "Xbox Series X/S"
                        },
                        new
                        {
                            Id = new Guid("015b4979-c47f-43fc-8d01-8d8c71b47c95"),
                            Name = "PlayStation 4"
                        },
                        new
                        {
                            Id = new Guid("e4f513a7-d348-466b-830c-165a8aed2b4d"),
                            Name = "PlayStation 5"
                        },
                        new
                        {
                            Id = new Guid("22312817-bd95-4589-91ea-6f285ce91a95"),
                            Name = "Android/IOS"
                        });
                });

            modelBuilder.Entity("VideoGameLibraryApp.Domain.Entities.VideoGamePlatformAvailability", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VideoGameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VideoGamePlatformId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VideoGameId");

                    b.HasIndex("VideoGamePlatformId");

                    b.ToTable("VideoGamePlatformAvailability");

                    b.HasData(
                        new
                        {
                            Id = new Guid("01598331-16ea-4189-a870-380fede80861"),
                            VideoGameId = new Guid("2eabc775-0201-4c48-8200-6c3aba9c6d4b"),
                            VideoGamePlatformId = new Guid("518a4c3e-5a6d-4ca5-b960-ce27a73d4afc")
                        },
                        new
                        {
                            Id = new Guid("c42f83c1-7463-4b23-a235-baf0d7484c18"),
                            VideoGameId = new Guid("2eabc775-0201-4c48-8200-6c3aba9c6d4b"),
                            VideoGamePlatformId = new Guid("2b60a4fb-3c38-4fea-9d55-ed03151290e1")
                        },
                        new
                        {
                            Id = new Guid("f01a790b-87c5-4441-a162-3376e3ab94c8"),
                            VideoGameId = new Guid("a4d51e63-bbeb-42a7-abb9-b127932d13f7"),
                            VideoGamePlatformId = new Guid("ddc9382d-5e3c-453d-a35e-046e48b28f61")
                        },
                        new
                        {
                            Id = new Guid("1e1c9fef-9999-4543-8c00-21026f9753a9"),
                            VideoGameId = new Guid("a4d51e63-bbeb-42a7-abb9-b127932d13f7"),
                            VideoGamePlatformId = new Guid("518a4c3e-5a6d-4ca5-b960-ce27a73d4afc")
                        },
                        new
                        {
                            Id = new Guid("be54b06f-5544-48a3-9ac9-e901d46b58bc"),
                            VideoGameId = new Guid("a4d51e63-bbeb-42a7-abb9-b127932d13f7"),
                            VideoGamePlatformId = new Guid("2b60a4fb-3c38-4fea-9d55-ed03151290e1")
                        },
                        new
                        {
                            Id = new Guid("24655c12-1bb4-4e57-981e-28bf4470ebe3"),
                            VideoGameId = new Guid("63e26d44-502d-4ca4-a47c-4538e10f5bd3"),
                            VideoGamePlatformId = new Guid("0600e140-c1ad-42d3-a4a9-81f58bac94fd")
                        });
                });

            modelBuilder.Entity("VideoGameLibraryApp.Domain.Entities.VideoGamePlatformAvailability", b =>
                {
                    b.HasOne("VideoGameLibraryApp.Domain.Entities.VideoGame", "VideoGame")
                        .WithMany("VideoGamePlatformAvailability")
                        .HasForeignKey("VideoGameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VideoGameLibraryApp.Domain.Entities.VideoGamePlatform", "VideoGamePlatform")
                        .WithMany("VideoGamePlatformAvailability")
                        .HasForeignKey("VideoGamePlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VideoGame");

                    b.Navigation("VideoGamePlatform");
                });

            modelBuilder.Entity("VideoGameLibraryApp.Domain.Entities.VideoGame", b =>
                {
                    b.Navigation("VideoGamePlatformAvailability");
                });

            modelBuilder.Entity("VideoGameLibraryApp.Domain.Entities.VideoGamePlatform", b =>
                {
                    b.Navigation("VideoGamePlatformAvailability");
                });
#pragma warning restore 612, 618
        }
    }
}
