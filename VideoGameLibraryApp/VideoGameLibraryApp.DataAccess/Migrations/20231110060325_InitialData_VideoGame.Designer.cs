// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VideoGameLibraryApp.DataAccess;

#nullable disable

namespace VideoGameLibraryApp.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231110060325_InitialData_VideoGame")]
    partial class InitialData_VideoGame
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VideoGameLibraryApp.Domain.Entities.VideoGame", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsCoop")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMultiplayer")
                        .HasColumnType("bit");

                    b.Property<string>("Publisher")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("VideoGames");

                    b.HasData(
                        new
                        {
                            Id = new Guid("74ac5996-3cc6-4bc3-988c-c6f53540624a"),
                            Genre = "Survival",
                            IsCoop = false,
                            IsMultiplayer = true,
                            Publisher = "Mojang",
                            ReleaseDate = new DateTime(2011, 4, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Minecraft"
                        },
                        new
                        {
                            Id = new Guid("f34443fd-160b-45f9-ae53-cee0913d6587"),
                            Genre = "Platformer",
                            IsCoop = true,
                            IsMultiplayer = false,
                            ReleaseDate = new DateTime(2027, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "It Takes Two"
                        },
                        new
                        {
                            Id = new Guid("a7bee25b-c266-40fb-8dd7-8fe438bae785"),
                            Genre = "Shooter",
                            IsCoop = true,
                            IsMultiplayer = true,
                            ReleaseDate = new DateTime(2001, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Halo"
                        });
                });

            modelBuilder.Entity("VideoGameLibraryApp.Domain.Entities.VideoGamePlatform", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("VideoGamePlatforms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fe708027-fb57-4a0f-9cbb-c588178d5d02"),
                            Name = "PC"
                        },
                        new
                        {
                            Id = new Guid("27af60a1-4715-4b4c-a027-176e9019a75d"),
                            Name = "Nintendo Switch"
                        },
                        new
                        {
                            Id = new Guid("474699ae-71d5-4adc-b5ca-e8a699005f19"),
                            Name = "Nintendo 64"
                        },
                        new
                        {
                            Id = new Guid("99890290-2ffc-4693-a3fb-e31636911eb9"),
                            Name = "Xbox 360"
                        },
                        new
                        {
                            Id = new Guid("cd07d196-35a4-4ba4-bf2d-040712314612"),
                            Name = "Xbox Series X/S"
                        },
                        new
                        {
                            Id = new Guid("6915746e-a8f5-4305-af2d-179a97b1ff94"),
                            Name = "PlayStation 4"
                        },
                        new
                        {
                            Id = new Guid("9314dbb5-12d7-43fe-a5f0-aa58215b2b80"),
                            Name = "PlayStation 5"
                        },
                        new
                        {
                            Id = new Guid("58028ff8-525f-4719-83fb-5d306ae40e98"),
                            Name = "Android/IOS"
                        });
                });

            modelBuilder.Entity("VideoGameLibraryApp.Domain.Entities.VideoGamePlatformAvailability", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VideoGameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VideoGamePlatformId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VideoGameId");

                    b.HasIndex("VideoGamePlatformId");

                    b.ToTable("VideoGamePlatformAvailability");

                    b.HasData(
                        new
                        {
                            Id = new Guid("95929f89-55c5-4274-9ab5-ee1d93505cbf"),
                            VideoGameId = new Guid("74ac5996-3cc6-4bc3-988c-c6f53540624a"),
                            VideoGamePlatformId = new Guid("518a4c3e-5a6d-4ca5-b960-ce27a73d4afc")
                        },
                        new
                        {
                            Id = new Guid("64eeca2f-0b8e-4221-b07d-f516661345eb"),
                            VideoGameId = new Guid("74ac5996-3cc6-4bc3-988c-c6f53540624a"),
                            VideoGamePlatformId = new Guid("2b60a4fb-3c38-4fea-9d55-ed03151290e1")
                        },
                        new
                        {
                            Id = new Guid("b287e537-f3af-4d50-be91-bbce12c9e8ae"),
                            VideoGameId = new Guid("a7bee25b-c266-40fb-8dd7-8fe438bae785"),
                            VideoGamePlatformId = new Guid("ddc9382d-5e3c-453d-a35e-046e48b28f61")
                        },
                        new
                        {
                            Id = new Guid("485a6e96-72aa-4aed-8142-1b2caf4a60a5"),
                            VideoGameId = new Guid("a7bee25b-c266-40fb-8dd7-8fe438bae785"),
                            VideoGamePlatformId = new Guid("518a4c3e-5a6d-4ca5-b960-ce27a73d4afc")
                        },
                        new
                        {
                            Id = new Guid("fc54fdb1-f3ef-4da3-84ee-bce9286fe59e"),
                            VideoGameId = new Guid("a7bee25b-c266-40fb-8dd7-8fe438bae785"),
                            VideoGamePlatformId = new Guid("2b60a4fb-3c38-4fea-9d55-ed03151290e1")
                        },
                        new
                        {
                            Id = new Guid("b15f1a71-9d1e-4cee-b59e-e3c1741efd9e"),
                            VideoGameId = new Guid("f34443fd-160b-45f9-ae53-cee0913d6587"),
                            VideoGamePlatformId = new Guid("0600e140-c1ad-42d3-a4a9-81f58bac94fd")
                        });
                });

            modelBuilder.Entity("VideoGameLibraryApp.Domain.Entities.VideoGamePlatformAvailability", b =>
                {
                    b.HasOne("VideoGameLibraryApp.Domain.Entities.VideoGame", "VideoGame")
                        .WithMany("VideoGamePlatformAvailability")
                        .HasForeignKey("VideoGameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VideoGameLibraryApp.Domain.Entities.VideoGamePlatform", "VideoGamePlatform")
                        .WithMany("VideoGamePlatformAvailability")
                        .HasForeignKey("VideoGamePlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VideoGame");

                    b.Navigation("VideoGamePlatform");
                });

            modelBuilder.Entity("VideoGameLibraryApp.Domain.Entities.VideoGame", b =>
                {
                    b.Navigation("VideoGamePlatformAvailability");
                });

            modelBuilder.Entity("VideoGameLibraryApp.Domain.Entities.VideoGamePlatform", b =>
                {
                    b.Navigation("VideoGamePlatformAvailability");
                });
#pragma warning restore 612, 618
        }
    }
}
