// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VideoGameLibraryApp.DataAccess;

#nullable disable

namespace VideoGameLibraryApp.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231110040445_InitialData_XboxNameChange_VideoGamePlatform")]
    partial class InitialData_XboxNameChange_VideoGamePlatform
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VideoGameLibraryApp.Domain.Entities.VideoGame", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsCoop")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMultiplayer")
                        .HasColumnType("bit");

                    b.Property<string>("Publisher")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("VideoGames");
                });

            modelBuilder.Entity("VideoGameLibraryApp.Domain.Entities.VideoGamePlatform", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("VideoGamePlatforms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f504fadd-eb43-4f9b-ab26-7ece3a4aa436"),
                            Name = "PC"
                        },
                        new
                        {
                            Id = new Guid("7a865638-9fb7-44a0-86cb-561260753241"),
                            Name = "Nintendo Switch"
                        },
                        new
                        {
                            Id = new Guid("39313d51-d740-417e-8a6a-2cb787e3b7e2"),
                            Name = "Nintendo 64"
                        },
                        new
                        {
                            Id = new Guid("7e0cf15e-878c-4cfe-8e4b-afdbc6e4e27c"),
                            Name = "Xbox 360"
                        },
                        new
                        {
                            Id = new Guid("282f666e-8760-4945-b7f3-5c6efceb013c"),
                            Name = "Xbox Series X/S"
                        },
                        new
                        {
                            Id = new Guid("480f079e-8d31-4aa0-9574-a17d892bcdeb"),
                            Name = "PlayStation 4"
                        },
                        new
                        {
                            Id = new Guid("711f2638-ad3a-44b3-8995-f1f4659f8bca"),
                            Name = "PlayStation 5"
                        },
                        new
                        {
                            Id = new Guid("bfb89514-e425-4e47-8064-ff1ab378c2b1"),
                            Name = "Android/IOS"
                        });
                });

            modelBuilder.Entity("VideoGameLibraryApp.Domain.Entities.VideoGamePlatformAvailability", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VideoGameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VideoGamePlatformId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VideoGameId");

                    b.HasIndex("VideoGamePlatformId");

                    b.ToTable("VideoGamePlatformAvailability");
                });

            modelBuilder.Entity("VideoGameLibraryApp.Domain.Entities.VideoGamePlatformAvailability", b =>
                {
                    b.HasOne("VideoGameLibraryApp.Domain.Entities.VideoGame", "VideoGame")
                        .WithMany("VideoGamePlatformAvailability")
                        .HasForeignKey("VideoGameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VideoGameLibraryApp.Domain.Entities.VideoGamePlatform", "VideoGamePlatform")
                        .WithMany("VideoGamePlatformAvailability")
                        .HasForeignKey("VideoGamePlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VideoGame");

                    b.Navigation("VideoGamePlatform");
                });

            modelBuilder.Entity("VideoGameLibraryApp.Domain.Entities.VideoGame", b =>
                {
                    b.Navigation("VideoGamePlatformAvailability");
                });

            modelBuilder.Entity("VideoGameLibraryApp.Domain.Entities.VideoGamePlatform", b =>
                {
                    b.Navigation("VideoGamePlatformAvailability");
                });
#pragma warning restore 612, 618
        }
    }
}
